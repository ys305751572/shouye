package com.smallchill.web.service.impl;

import com.smallchill.api.function.meta.consts.StatusConst;
import com.smallchill.core.plugins.dao.Blade;
import com.smallchill.core.plugins.dao.Db;
import com.smallchill.core.toolbox.Record;
import com.smallchill.core.toolbox.kit.DateTimeKit;
import com.smallchill.web.model.ArticleShow;
import com.smallchill.web.service.ArticleService;
import com.smallchill.web.service.ArticleShowService;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import com.smallchill.core.base.service.BaseService;


/**
 * Generated by yesong.
 * 2017-01-13 16:15:01
 */
@Service
public class ArticleShowServiceImpl extends BaseService<ArticleShow> implements ArticleShowService, StatusConst {

    @Autowired
    private ArticleService articleService;

    /**
     * 文章感兴趣
     *
     * @param id tb_article_show id
     */
    @Override
    public void interest(int id, int articleId, int userId) {
        updateInterestById(id, ARTICLE_SHOW_INTERESTED_TYPE, userId);
        // 增加感兴趣数量
        articleService.addInterestCount(articleId);
    }

    /**
     * 文章不感兴趣
     *
     * @param id tb_article_show id
     */
    @Override
    public void uninterest(int id, int articleId, int position, int userId) {
        updateInterestById(id, ARTICLE_SHOW_NUINTERESTED_TYPE, userId);
        if (position == 2) {
            // 减少感兴趣数量
            articleService.subtractInterestCount(articleId);
        }
    }

    /**
     * 从不感兴趣列表中移除该数据
     *
     * @param id tb_article_show id
     */
    @Override
    public void move(int id, int articleId, int userId) {
        updateInterestById(id, ARTICLE_SHOW_INTERESTED_TYPE, userId);
        // 增加感兴趣数量
        articleService.addInterestCount(articleId);
    }

    /**
     *
     * @param fromId
     * @param toId
     * @param type
     */
    @Override
    public void shielding(int fromId, int toId, int type, int userId) {
        updateBy("is_intereste = 5", "from_id = #{fromId} AND to_id = #{toId} AND type = #{type}",
                Record.create().set("fromId", fromId).set("toId", toId).set("type", type));
    }

    /**
     * 修改 tb_article_show数据感兴趣状态
     *
     * @param id   tb_article_show id
     * @param type 感兴趣状态
     */
    @Override
    public void updateInterestById(int id, int type, int userId) {
        ArticleShow articleShow = this.findById(id);
        if(articleShow.getType() == 8) {
            Db.init().insert("insert into tb_activity_interest(article_id,user_id,is_intereste,create_time)" +
                    "values (#{articleId}, #{userId}, #{type},#{createTime})",
                    Record.create().set("articleId", articleShow.getArticleId())
                    .set("userId", userId).set("type", type).set("createTime", DateTimeKit.nowLong()));
        }
        else {
            this.updateBy("is_intereste = #{type}", "id = #{id}", Record.create().set("type", type).set("id", id));
        }
    }
}
