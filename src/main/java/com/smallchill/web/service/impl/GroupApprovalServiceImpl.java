package com.smallchill.web.service.impl;

import com.smallchill.api.common.exception.UserHasApprovalException;
import com.smallchill.api.common.exception.UserHasJoinGroupException;
import com.smallchill.api.common.exception.UserInBlankException;
import com.smallchill.core.plugins.dao.Db;
import com.smallchill.core.toolbox.Record;
import com.smallchill.web.model.GroupApproval;
import com.smallchill.web.service.GroupApprovalService;
import org.apache.commons.lang3.StringUtils;
import org.springframework.stereotype.Service;
import com.smallchill.core.base.service.BaseService;

/**
 * Generated by Blade.
 * 2016-10-27 11:45:35
 */
@Service
public class GroupApprovalServiceImpl extends BaseService<GroupApproval> implements GroupApprovalService {

    /**
     * 是否已经申请
     *
     * @param ga 申请信息
     * @return 结果
     */
    public boolean isApprival(GroupApproval ga) {
        String sql = "select id from tb_group_approval where group_id = #{groupId} and user_id = #{userId}";
        Record record = Record.create();
        record.put("groupId", ga.getGroupId());
        record.put("userId", ga.getUserId());
        return this.isExist(sql, record);
    }

    @Override
    public void join(GroupApproval ga) throws UserHasApprovalException, UserHasJoinGroupException, UserInBlankException {
        // 是否已经发送申请
        if (isApprival(ga)) throw new UserHasApprovalException();
        // 是否已经加入该群
        if (isJoin(ga)) throw new UserHasJoinGroupException();
        // 新增申请记录
        save1(ga);
    }

    /**
     * 是否已经加入该组织
     *
     * @param ga 申请信息
     */
    private boolean isJoin(GroupApproval ga) throws UserHasJoinGroupException, UserInBlankException {

        String sql = "select status from tb_user_group where group_id = #{groupId} and user_id = #{userId}";
        Record record = Record.create();
        record.put("groupId", ga.getGroupId());
        record.put("userId", ga.getUserId());
        Record _record = Db.init().selectOne(sql, record);
        // 是否加入该组织
        if (_record.get("status") == null) return false;
        if (Integer.parseInt(_record.get("status").toString()) == 0)
            return true;
        // 是否在该组织的黑名单中
        if (Integer.parseInt(_record.get("status").toString()) == 2)
            throw new UserInBlankException();
        return false;
    }

    /**
     * 新增申请记录
     *
     * @param ga 申请信息
     */
    private void save1(GroupApproval ga) {
        this.save(ga);
    }
}
