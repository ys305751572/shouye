package com.smallchill.api.function.service.impl;

import com.smallchill.api.function.modal.Shielding;
import com.smallchill.api.function.service.ShieldingService;
import com.smallchill.core.plugins.dao.Blade;
import com.smallchill.core.plugins.dao.Db;
import com.smallchill.core.toolbox.Record;
import com.smallchill.core.toolbox.kit.DateTimeKit;
import com.smallchill.web.model.ArticleShow;
import com.smallchill.web.service.ArticleShowService;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import com.smallchill.core.base.service.BaseService;

import java.util.List;

/**
 * Generated by yesong.
 * 2017-02-06 11:21:13
 */
@Service
public class ShieldingServiceImpl extends BaseService<Shielding> implements ShieldingService {

    @Autowired
    private ArticleShowService articleShowService;

    @Override
    public void shieldingByArticleShowId(Integer articleShowId, Integer userId) {
        ArticleShow articleShow = articleShowService.findById(articleShowId);
        saveShielding(articleShow, userId);
        articleShowService.shielding(articleShow.getFromId(), articleShow.getToId(), articleShow.getType());
    }

    /**
     * 屏蔽列表
     * @param userId 当前用户ID
     * @return list
     */
    @Override
    public List<Record> listByUserId(Integer userId) {
        String sql = Blade.dao().getScript("Shielding.listByUserId").getSql();
        return Db.init().selectList(sql, Record.create().set("userId", userId));
    }

    private void saveShielding(ArticleShow articleShow, Integer userId) {
        Shielding shielding = new Shielding();
        shielding.setUserId(userId);
        shielding.setType(articleShow.getType());
        shielding.setCreateTime(DateTimeKit.nowLong());
        shielding.setFromId(articleShow.getFromId());
        save(shielding);
    }
}
